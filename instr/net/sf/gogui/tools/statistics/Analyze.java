/* $$43564A43$$ WARNING: Do not edit. $$ This file has been instrumented by qualityscroll_cover_jacov 4.0.4-SNAPSHOT (Instrument Date:20240229123823) $$ */// Analyze.java

package net.sf.gogui.tools.statistics;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.text.DecimalFormat;
import static net.sf.gogui.go.GoColor.BLACK;
import static net.sf.gogui.go.GoColor.WHITE;
import net.sf.gogui.game.GameInfo;
import net.sf.gogui.game.GameTree;
import net.sf.gogui.game.StringInfo;
import net.sf.gogui.game.StringInfoColor;
import net.sf.gogui.sgf.SgfReader;
import net.sf.gogui.util.ErrorMessage;
import net.sf.gogui.util.FileUtil;
import net.sf.gogui.util.Histogram;
import net.sf.gogui.util.HtmlUtil;
import net.sf.gogui.util.StringUtil;
import net.sf.gogui.util.Table;
import net.sf.gogui.util.TableUtil;

/** Produce HTML reports from the table generated by Statistics. */
public class Analyze
{
    public static transient boolean[] $qualityscroll_cover_coverage_buffer = $qualityscroll_cover_coverage_buffer_init();public static boolean[] $qualityscroll_cover_coverage_buffer_init() {try{if($qualityscroll_cover_coverage_buffer != null){return $qualityscroll_cover_coverage_buffer;}java.lang.Class<?> thisClass = Analyze.class.getClassLoader().loadClass("com.qualityscroll.cover.runtime.ProbeStore");java.lang.reflect.Method getProbesMethod = thisClass.getMethod("getProbes", long.class, long.class, long.class, java.lang.String.class, int.class);$qualityscroll_cover_coverage_buffer = (boolean[]) getProbesMethod.invoke(null,/* key(tuId + timestamp) */ -4071995008676533990L,/* translation unit id   */ 8643444434499088200L,/* timestamp             */ 1709177903493L,/* source file name      */ "Analyze.java",/* probe size            */ 310);}catch(java.lang.Exception e){throw new java.lang.RuntimeException(e);}return $qualityscroll_cover_coverage_buffer;}private static boolean $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(int index) {$qualityscroll_cover_coverage_buffer[index] = true;return true;}public Analyze(String fileName, String output, int precision)
        throws Exception
    {$qualityscroll_cover_coverage_buffer_init();
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(0);if ((output.equals("")) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(2) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(1);m_output = FileUtil.removeExtension(new File(fileName), "dat");}
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(33);if ((new File(output).isDirectory()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(35) && false))
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(34);File name = new File((new File(fileName)).getName());
            m_output = output + File.separator
                + FileUtil.removeExtension(name, "dat");
        }
        else
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(36);m_output = output;}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(3);m_precision = precision;
        m_table = new Table();
        m_table.read(new File(fileName));
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(4);if ((m_table.getNumberColumns() < 2
            || ! m_table.getColumnTitle(0).equals("File")
            || ! m_table.getColumnTitle(1).equals("Move")) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(6) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(5);throw new ErrorMessage("Invalid table format");}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(7);m_commands = new ArrayList<String>();
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(8);for (int i = 2; (i < m_table.getNumberColumns()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(10) && false); ++i)
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(9);m_commands.add(m_table.getColumnTitle(i));}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(11);m_commandStatistics =
            new ArrayList<CommandStatistics>(m_commands.size());
        File file = new File(m_output + ".html");
        initGameData();
        findGameGlobalCommands();
        PrintStream out = new PrintStream(file);
        startHtml(out, "Statistics Summary");
        startInfo(out, "Statistics Summary");
        writeInfo(out);
        endInfo(out);
        out.print("<table border=\"0\">\n" +
                  "<tr><td>\n");
        writePlot(out, "<small>positions</small>",
                  getCountFile().getName(),
                  "<a href=\"" + getCountDataFile().getName()
                  + "\"><small>data</small></a>");
        out.print("</td></tr>\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(12);for (int i = 0; (i < m_commands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(14) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(13);CommandStatistics commandStatistics = computeCommandStatistics(i);
            m_commandStatistics.add(commandStatistics);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(27);if ((commandStatistics.getCount() > 0
                && ! commandStatistics.m_isBeginCommand) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(29) && false))
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(28);String command = getCommand(i);
                Table table = commandStatistics.m_tableAtMove;
                Plot plot = generatePlotMove(getImgWidth(m_maxMove),
                                             getColor(command));
                plot.setFormatY(commandStatistics.m_format);
                File pngFile = getAvgPlotFile(i);
                File dataFile = getAvgDataFile(i);
                plot.setPlotStyleNoLines();
                plot.plot(pngFile, table, "Move", "Mean", "Error");
                FileWriter writer = new FileWriter(dataFile);
                try
                {
                    $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(30);table.save(writer, false);
                }
                finally
                {
                    $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(31);writer.close();
                }
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(32);out.print("<tr><td>\n");
                writePlot(out, getCommandLink(i), pngFile.getName(),
                          "<a href=\"" + dataFile.getName()
                          + "\"><small>data</small></a>");
                out.print("</td></tr>\n");
            }
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(15);out.print("</table>\n" +
                  "<hr>\n" +
                  "<table border=\"0\" cellpadding=\"0\">\n" +
                  "<tr>\n");
        int n = 0;
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(16);for (int i = 0; (i < m_commands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(18) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(17);CommandStatistics commandStatistics = getCommandStatistics(i);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(20);if ((commandStatistics.getCount() == 0) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(22) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(21);continue;}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(23);out.print("<td valign=\"bottom\" bgcolor=\"" + COLOR_HEADER
                      + "\">\n");
            writePlot(out, getCommandLink(i), getHistoFile(i).getName(), "");
            out.print("</td>\n");
            ++n;
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(24);if ((n % 5 == 0) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(26) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(25);out.print("</tr><tr>\n");}
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(19);out.print("</tr>\n" +
                  "</table>\n" +
                  "<hr>\n");
        writeCommandsTable(out);
        out.print("<hr>\n");
        writeGameTable(out);
        finishHtml(out);
        out.close();
    }

    private static final Color[] PLOT_COLOR = {
        Color.decode("#ff0000"),
        Color.decode("#ff9800"),
        Color.decode("#009800"),
        Color.decode("#00c0c0"),
        Color.decode("#0000ff"),
        Color.decode("#980098")
    };

    /** Command having at most one result per game. */
    private static class GameGlobalCommand
    {
        public GameGlobalCommand(String name, ArrayList<String> results)
        {$qualityscroll_cover_coverage_buffer_init();
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(37);m_name = name;
            m_results = results;
            initAllEmpty();
        }

        public boolean allEmpty()
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(38);return m_allEmpty;
        }

        public String getName()
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(39);return m_name;
        }

        public String getResult(int game)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(40);return m_results.get(game);
        }

        private boolean m_allEmpty;

        private final String m_name;

        /** Results per game. */
        private final ArrayList<String> m_results;

        private void initAllEmpty()
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(41);m_allEmpty = false;
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(42);for (int game = 0; (game < m_results.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(44) && false); ++game)
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(43);String result = getResult(game);
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(46);if ((! StringUtil.isEmpty(result)) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(48) && false))
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(47);return;}
            }
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(45);m_allEmpty = true;
        }
    }

    private static class GameData
    {
        public String m_file;

        public String m_name;

        public int m_finalPosition;

        public int m_numberPositions;
    }

    private static final int IMAGE_HEIGHT = 100;

    private int m_maxMove;

    private int m_movePrintInterval;

    private final int m_precision;

    private static final String COLOR_HEADER = "#b5c8f0";

    private static final String COLOR_INFO = "#e0e0e0";

    private final String m_output;

    private final Table m_table;

    private Table m_tableFinal;

    private final ArrayList<CommandStatistics> m_commandStatistics;

    private final ArrayList<String> m_commands;

    private ArrayList<GameGlobalCommand> m_gameGlobalCommands;

    private ArrayList<GameData> m_gameData;

    private void endInfo(PrintStream out)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(49);out.print("</table></td></tr>\n" +
                  "</table>\n" +
                  "<hr>\n");
    }

    private void findGameGlobalCommands() throws Table.InvalidLocation
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(50);m_gameGlobalCommands = new ArrayList<GameGlobalCommand>();
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(51);for (int i = 0; (i < m_commands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(53) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(52);String command = getCommand(i);
            boolean isGameGlobal = true;
            ArrayList<String> gameResult = new ArrayList<String>();
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(54);for (int j = 0; (j < m_gameData.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(56) && false); ++j)
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(55);GameData data = m_gameData.get(j);
                Table table = TableUtil.select(m_table, "File", data.m_file,
                                               command);
                ArrayList<String> notEmpty
                    = TableUtil.getColumnNotEmpty(table, command);
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(60);if ((notEmpty.size() > 1) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(62) && false))
                {
                    $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(61);isGameGlobal = false;
                    break;
                }
                else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(63);if ((notEmpty.size() == 1) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(65) && false))
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(64);gameResult.add(notEmpty.get(0));}
                else
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(66);gameResult.add("");}}
            }
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(57);if ((isGameGlobal) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(59) && false))
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(58);GameGlobalCommand gameGlobalCommand
                    = new GameGlobalCommand(command, gameResult);
                m_gameGlobalCommands.add(gameGlobalCommand);
            }
        }
    }

    private void finishHtml(PrintStream out)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(67);out.print(HtmlUtil.getFooter("gogui-statistics") +
                  "</body>\n" +
                  "</html>\n");
    }

    private File getAvgDataFile(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(68);return new File(m_output + ".command-" + commandIndex + ".avg.dat");
    }

    private File getAvgPlotFile(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(69);return new File(m_output + ".command-" + commandIndex + ".avg.png");
    }

    private String getCommand(int index)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(70);return m_commands.get(index);
    }

    private File getCommandFile(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(71);return new File(m_output + ".command-" + commandIndex + ".html");
    }

    private CommandStatistics getCommandStatistics(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(72);return m_commandStatistics.get(commandIndex);
    }

    private File getCountFile()
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(73);return new File(m_output + ".count.png");
    }

    private File getCountDataFile()
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(74);return new File(m_output + ".count.dat");
    }

    private File getGameFile(int gameIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(75);return new File(m_output + ".game-" + gameIndex + ".html");
    }

    private GameGlobalCommand getGameGlobalCommand(int index)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(76);return m_gameGlobalCommands.get(index);
    }

    private File getHistoFile(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(77);return new File(m_output + ".command-" + commandIndex + ".histo.png");
    }

    private File getHistoFile(int commandIndex, int moveIntervalIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(78);return new File(m_output + ".command-" + commandIndex + ".interval-"
                        + moveIntervalIndex + ".histo.png");
    }

    private File getHistoFinalFile(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(79);return new File(m_output + ".command-" + commandIndex + ".final.png");
    }

    private File getPlotFile(int gameIndex, int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(80);return new File(m_output + ".game-" + gameIndex + ".command-"
                        + commandIndex + ".png");
    }

    private String getCommandLink(int commandIndex)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(81);String link = "<small>" + getCommand(commandIndex) + "</small>";
        CommandStatistics statistics = getCommandStatistics(commandIndex);
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(82);if ((statistics.getCount() == 0 || statistics.m_isBeginCommand) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(84) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(83);return link;}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(85);return "<a href=\"" + getCommandFile(commandIndex).getName()
            + "\">" + link + "</a>";
    }

    private CommandStatistics computeCommandStatistics(int index)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(86);String command = getCommand(index);
        return new CommandStatistics(command, m_table, m_tableFinal,
                                     getHistoFile(index),
                                     getHistoFinalFile(index),
                                     getColor(command), m_precision);
    }

    private Plot generatePlotMove(int width, Color color)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(87);Plot plot = new Plot(width, IMAGE_HEIGHT, color, m_precision);
        plot.setSolidLineInterval(10);
        plot.setXMin(0);
        plot.setXMax(m_maxMove);
        plot.setXTics(5);
        plot.setXLabelPerTic(2);
        return plot;
    }

    private void generatePlot(int commandIndex, DecimalFormat format,
                              int gameIndex, String gameFile) throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(88);String command = getCommand(commandIndex);
        Table table = TableUtil.select(m_table, "File", gameFile,
                                       "Move", command);
        File file = getPlotFile(gameIndex, commandIndex);
        Plot plot = generatePlotMove(getImgWidth(m_maxMove),
                                     getColor(command));
        plot.setFormatY(format);
        plot.plot(file, table, "Move", command, null);
    }

    private Color getColor(String command) throws Table.InvalidLocation
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(89);int index = m_table.getColumnIndex(command);
        return PLOT_COLOR[(index - 2) % PLOT_COLOR.length];
    }

    private String getGameLink(File fromFile, int gameNumber,
                               boolean shortName)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(90);GameData data = m_gameData.get(gameNumber);
        File gameFile = new File(data.m_file);
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(91);if ((! gameFile.exists()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(93) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(92);return (((shortName) ? ($qualityscroll_cover_jacov_probe_77f3aeeb12252f48(94) || true) : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(95) && false)) ? gameFile.getName() : gameFile.toString());}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(96);String path = FileUtil.getRelativeURI(fromFile, gameFile);
        return "<a href=\"" + path + "\">"
            + (((shortName) ? ($qualityscroll_cover_jacov_probe_77f3aeeb12252f48(97) || true) : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(98) && false)) ? gameFile.getName() : path) + "</a>";
    }

    private int getImgWidth(int numberMoves)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(99);return Math.max(10, Math.min(numberMoves * 9, 1040));
    }

    private void initGameData() throws Table.InvalidLocation, IOException
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(100);m_gameData = new ArrayList<GameData>();
        String last = null;
        GameData data = null;
        m_maxMove = 0;
        int[] count = new int[0];
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(101);for (int row = 0; (row < m_table.getNumberRows()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(103) && false); ++row)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(102);String file = m_table.get("File", row);
            int move = Integer.parseInt(m_table.get("Move", row));
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(126);if ((move >= count.length) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(128) && false))
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(127);int[] newCount = new int[move + 1];
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(129);for (int i = 0; (i < count.length) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(131) && false); ++i)
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(130);newCount[i] = count[i];}
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(132);count = newCount;
            }
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(133);++count[move];
            m_maxMove = Math.max(m_maxMove, move);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(134);if ((last == null || ! file.equals(last)) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(136) && false))
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(135);if ((data != null) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(138) && false))
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(137);m_gameData.add(data);}
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(139);data = new GameData();
                data.m_file = file;
                data.m_name = new File(file).getName();
            }
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(140);++data.m_numberPositions;
            data.m_finalPosition = move;
            last = file;
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(104);m_movePrintInterval = 1;
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(105);while ((m_movePrintInterval < m_maxMove / 30) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(107) && false))
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(106);m_movePrintInterval *= 5;
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(122);if ((m_movePrintInterval >= m_maxMove / 30) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(124) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(123);break;}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(125);m_movePrintInterval *= 2;
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(108);m_gameData.add(data);
        m_tableFinal = new Table(m_table.getColumnTitles());
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(109);for (int i = 0; (i < m_gameData.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(111) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(110);data = m_gameData.get(i);
            String file = data.m_file;
            String finalPosition = Integer.toString(data.m_finalPosition);
            int row = TableUtil.findRow(m_table, "File", file, "Move",
                                        finalPosition);
            TableUtil.appendRow(m_tableFinal, m_table, row);
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(112);ArrayList<String> columnTitles = new ArrayList<String>();
        columnTitles.add("Move");
        columnTitles.add("Count");
        Table table = new Table(columnTitles);
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(113);for (int i = 0; (i < count.length) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(115) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(114);if ((count[i] == 0) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(120) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(119);continue;}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(121);table.startRow();
            table.set("Move", i);
            table.set("Count", count[i]);
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(116);Plot plot = generatePlotMove(getImgWidth(m_maxMove), Color.DARK_GRAY);
        plot.setNoPlotYZero();
        plot.plot(getCountFile(), table, "Move", "Count", null);
        FileWriter writer = new FileWriter(getCountDataFile());
        try
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(117);table.save(writer, false);
        }
        finally
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(118);writer.close();
        }
    }

    private boolean isGameGlobalCommand(String command)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(141);for (int i = 0; (i < m_gameGlobalCommands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(143) && false); ++i)
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(142);if ((getGameGlobalCommand(i).getName().equals(command)) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(146) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(145);return true;}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(144);return false;
    }

    private void startHtml(PrintStream out, String title)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(147);String charset = StringUtil.getDefaultEncoding();
        out.print("<html>\n" +
                  "<head>\n" +
                  "<title>" + title + "</title>\n" +
                  "<meta http-equiv=\"Content-Type\""
                  + " content=\"text/html; charset=" + charset + "\">\n" +
                  HtmlUtil.getMeta("gogui-statistics") +
                  "<style type=\"text/css\">\n" +
                  "<!--\n" +
                  "a:link { color:#0000ee }\n" +
                  "a:visited { color:#551a8b }\n" +
                  ".smalltable { font-size:80%; }\n" +
                  ".smalltable td { background-color:" + COLOR_INFO
                  + "; text-align:center; }\n" +
                  ".smalltable th { background-color:" + COLOR_HEADER
                  + ";  vertical-align:top; }\n" +
                  ".smalltable table { border:0; cellpadding:0; }\n" +
                  "-->\n" +
                  "</style>\n" +
                  "</head>\n" +
                  "<body bgcolor=\"white\" text=\"black\">\n");
    }

    private void startInfo(PrintStream out, String title)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(148);out.print("<table border=\"0\" width=\"100%\" bgcolor=\""
                  + COLOR_HEADER + "\">\n" +
                  "<tr><td>\n" +
                  "<h1>" + title + "</h1>\n" +
                  "</td></tr>\n" +
                  "</table>\n" +
                  "<table width=\"100%\" bgcolor=\"" + COLOR_INFO
                  + "\" >\n" +
                  "<tr><td><table style=\"font-size:80%\""
                  + " cellpadding=\"0\">\n");
    }

    private void writeCommandPage(int commandIndex)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(149);String command = getCommand(commandIndex);
        CommandStatistics commandStatistics
            = getCommandStatistics(commandIndex);
        File file = getCommandFile(commandIndex);
        PrintStream out = new PrintStream(file);
        startHtml(out, command);
        startInfo(out, command);
        writeInfoBasics(out);
        writeHtmlRow(out, "Command Index", commandIndex);
        endInfo(out);
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(150);if ((! commandStatistics.m_isBeginCommand) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(152) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(151);out.print("<p><img src=\""
                      + getAvgPlotFile(commandIndex).getName()
                      + "\"></p>\n");}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(153);writeCommandStatistics(out, commandIndex);
        out.print("<hr>\n");
        out.print("<table border=\"0\" cellspacing=\"0\""
                  + " cellpadding=\"5\">\n");
        out.print("<tr><td>"
                  + "<small>All</small><br>"
                  + "<img src=\"" + getHistoFile(commandIndex).getName()
                  + "\"></td>\n");

        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(154);if ((commandStatistics.m_statisticsFinal.getCount() > 0) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(156) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(155);out.print("<td>"
                      + "<small>Final</small><br>"
                      + "<img src=\""
                      + getHistoFinalFile(commandIndex).getName()
                      + "\"></td>");}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(157);out.print("</tr>\n" +
                  "</table>\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(158);for (int i = 0; (i < m_maxMove) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(160) && false); i += m_movePrintInterval)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(159);Histogram histogram
                = commandStatistics.getStatistics(i).m_histogram;
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(162);if ((commandStatistics.getStatistics(i).getCount() == 0) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(164) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(163);continue;}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(165);Table histoTable
                = TableUtil.fromHistogram(histogram, command);
            File histoFile = getHistoFile(commandIndex, i);
            Color color = getColor(command);
            Plot plot = new Plot(180, 135, color, m_precision);
            commandStatistics.setHistogramProperties(plot);
            plot.plot(histoFile, histoTable, command, "Count", null);
            out.print("<table align=\"left\" border=\"0\">" +
                      "<tr><td align=\"center\"><small>" + i
                      + "</small><br><img src=\""
                      + getHistoFile(commandIndex, i).getName()
                      + "\"></td></tr></table>\n");
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(161);out.print("<br clear=\"left\">\n" +
                  "<hr>\n");
        writeGamePlots(out, commandIndex);
        finishHtml(out);
        out.close();
    }

    private void writeCommandStatistics(PrintStream out, int commandIndex)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(166);CommandStatistics commandStatistics
            = getCommandStatistics(commandIndex);
        String command = getCommand(commandIndex);
        PositionStatistics statisticsAll = commandStatistics.m_statisticsAll;
        PositionStatistics finalStatistics
            = commandStatistics.m_statisticsFinal;
        out.print("<table class=\"smalltable\">\n");
        out.print("<tr>");
        out.print("<th>Move</th>");
        writeStatisticsTableHeader(out);
        out.print("</tr>\n");
        DecimalFormat format = commandStatistics.m_format;
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(167);for (int i = 0; (i < m_maxMove) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(169) && false); i += m_movePrintInterval)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(168);PositionStatistics statisticsAtMove
                = commandStatistics.getStatistics(i);
            out.print("<tr>" +
                      "<td>" + i + "</td>");
            writeStatisticsTableData(out, statisticsAtMove, format, false);
            out.print("</tr>\n");
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(170);out.print("<tr style=\"font-weight:bold\">" +
                  "<td>Final</td>");
        writeStatisticsTableData(out, finalStatistics, format, false);
        out.print("</tr>\n");
        out.print("<tr style=\"font-weight:bold\">" +
                  "<td>All</td>");
        writeStatisticsTableData(out, statisticsAll, format,
                                 ! isGameGlobalCommand(command));
        out.print("</tr>\n");
        out.print("</table>\n");
    }

    private void writeCommandsTable(PrintStream out) throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(171);out.print("<table class=\"smalltable\">\n" +
                  "<thead><tr>"
                  + "<th>Command</th>");
        writeStatisticsTableHeader(out);
        out.print("</tr></thead>\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(172);for (int i = 0; (i < m_commands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(174) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(173);CommandStatistics commandStatistics = getCommandStatistics(i);
            int count = commandStatistics.getCount();
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(176);if ((count > 0 && ! commandStatistics.m_isBeginCommand) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(178) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(177);writeCommandPage(i);}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(179);PositionStatistics statisticsAll
                = commandStatistics.m_statisticsAll;
            out.print("<tr><td style=\"background-color:" + COLOR_HEADER
                      + "\">" + getCommandLink(i) + "</td>");
            writeStatisticsTableData(out, statisticsAll,
                                     commandStatistics.m_format,
                                     ! isGameGlobalCommand(getCommand(i)));
            out.print("</tr>\n");
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(175);out.print("</table>\n");
    }

    private void writeGamePage(String game, String name, int gameNumber)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(180);File file = getGameFile(gameNumber);
        PrintStream out = new PrintStream(file);
        String title = "Game " + (gameNumber + 1) + " (" + name + ")";
        startHtml(out, title);
        startInfo(out, title);
        writeInfoBasics(out);
        writeHtmlRow(out, "Game Index", gameNumber);
        writeHtmlRow(out, "File", getGameLink(file, gameNumber, false));
        try
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(181);InputStream in = new FileInputStream(new File(game));
            SgfReader reader = new SgfReader(in, new File(game), null, 0);
            GameTree tree = reader.getTree();
            GameInfo info = tree.getGameInfo(tree.getRoot());
            String playerBlack = info.get(StringInfoColor.NAME, BLACK);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(182);if ((playerBlack == null) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(184) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(183);playerBlack = "?";}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(185);String playerWhite = info.get(StringInfoColor.NAME, WHITE);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(186);if ((playerWhite == null) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(188) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(187);playerWhite = "?";}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(189);String result = info.get(StringInfo.RESULT);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(190);if ((result == null) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(192) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(191);result = "?";}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(193);writeHtmlRow(out, "Black", playerBlack);
            writeHtmlRow(out, "White", playerWhite);
            writeHtmlRow(out, "Result", result);
            in.close();
        }
        catch (Exception e)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(225);StringUtil.printException(e);
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(194);endInfo(out);
        out.print("<table border=\"0\">\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(195);for (int i = 0; (i < m_commands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(197) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(196);CommandStatistics commandStatistics = getCommandStatistics(i);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(222);if ((commandStatistics.getCount() > 0
                && ! commandStatistics.m_isBeginCommand) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(224) && false))
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(223);generatePlot(i, commandStatistics.m_format, gameNumber, game);
                out.print("<tr><td align=\"center\">" + getCommandLink(i)
                          + "<br><img src=\""
                          + getPlotFile(gameNumber, i).getName()
                          + "\"></td></tr>\n");
            }
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(198);out.print("</table>\n" +
                  "<hr>\n");
        Table table = TableUtil.select(m_table, "File", game);
        out.print("<table class=\"smalltable\">\n" +
                  "<thead><tr>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(199);for (int i = 1; (i < table.getNumberColumns()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(201) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(200);String command = table.getColumnTitle(i);
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(219);if ((! TableUtil.allEmpty(table, command)) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(221) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(220);out.print("<th>" + command + "</th>");}
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(202);out.print("</tr></thead>\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(203);for (int i = 0; (i < table.getNumberRows()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(205) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(204);out.print("<tr>");
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(207);for (int j = 1; (j < table.getNumberColumns()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(209) && false); ++j)
            {
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(208);String command = table.getColumnTitle(j);
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(211);if ((TableUtil.allEmpty(table, command)) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(213) && false))
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(212);continue;}
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(214);String value = table.get(command, i);
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(215);if ((value == null) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(217) && false))
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(216);value = "";}
                $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(218);out.print("<td>" + value + "</td>");
            }
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(210);out.print("</tr>\n");
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(206);out.print("</table>\n");
        finishHtml(out);
        out.close();
    }

    private void writeGamePlots(PrintStream out, int commandIndex)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(226);out.print("<table border=\"0\" cellpadding=\"0\""
                  + " cellspacing=\"0\">\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(227);for (int i = 0; (i < m_gameData.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(229) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(228);String plotFile = getPlotFile(i, commandIndex).getName();
            File file = getGameFile(i);
            out.print("<tr><td align=\"left\"><small><a href=\""
                      + file.getName() + "\">Game " + (i + 1) + "</a> ("
                      + getGameLink(file, i, true)
                      + "):</small><br>\n" +
                      "<img src=\"" + plotFile + "\"></td></tr>\n");
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(230);out.print("</table>\n");
    }

    private void writeGameTable(PrintStream out)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(231);out.print("<table class=\"smalltable\">\n" +
                  "<thead><tr><th>Game</th><th>File</th><th>Positions</th>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(232);for (int i = 0; (i < m_gameGlobalCommands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(234) && false); ++i)
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(233);if ((! getGameGlobalCommand(i).allEmpty()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(247) && false))
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(246);out.print("<th>" + getGameGlobalCommand(i).m_name + "</th>");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(235);out.print("</tr></thead>\n");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(236);for (int i = 0; (i < m_gameData.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(238) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(237);GameData data = m_gameData.get(i);
            String file = getGameFile(i).getName();
            out.print("<tr><td style=\"background-color:" + COLOR_HEADER
                      + "\"><a href=\"" + file + "\">Game " + (i + 1)
                      + "</a></td><td>" + data.m_name
                      + "</td><td>" + data.m_numberPositions + "</td>");
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(240);for (int j = 0; (j < m_gameGlobalCommands.size()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(242) && false); ++j)
                {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(241);if ((! getGameGlobalCommand(j).allEmpty()) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(245) && false))
                    {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(244);out.print("<td>" + getGameGlobalCommand(j).getResult(i)
                              + "</td>");}}
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(243);out.print("</tr>\n");
            writeGamePage(data.m_file, data.m_name, i);
        }
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(239);out.print("</table>\n");
    }

    private void writeHtmlRow(PrintStream out, String label,
                              String value) throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(248);out.print("<tr><th align=\"left\">" + label + ":</th>"
                  + "<td align=\"left\">" + value + "</td></tr>\n");
    }

    private void writeHtmlRow(PrintStream out, String label,
                              int value) throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(249);writeHtmlRow(out, label, Integer.toString(value));
    }

    private void writeInfoBasics(PrintStream out) throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(250);writeTableProperty(out, "Name");
        writeTableProperty(out, "Version");
        writeTableProperty(out, "Date");
        writeTableProperty(out, "Host");
        writeTableProperty(out, "Program");
    }

    private void writeInfo(PrintStream out) throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(251);writeInfoBasics(out);
        writeTableProperty(out, "Size");
        writeTableProperty(out, "Games");
        writeHtmlRow(out, "Positions", m_table.getNumberRows());
        writeTableProperty(out, "Backward");
    }

    private void writePlot(PrintStream out, String title, String file,
                           String info)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(252);out.print("<table width=\"100%\" cellspacing=\"0\""
                  + " cellpadding=\"0\">\n" +
                  "<tr><td><table width=\"100%\" border=\"0\""
                  + " cellpadding=\"0\" bgcolor=\"" + COLOR_HEADER
                  + "\">\n" +
                  "<tr><td");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(253);if ((! info.equals("")) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(255) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(254);out.print(" width=\"90%\"");}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(256);out.print(" align=\"center\">\n" +
                  title + "\n" +
                  "</td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(257);if ((! info.equals("")) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(259) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(258);out.print("<td align=\"right\">\n" + info + "\n</td>");}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(260);out.print("</tr></table></td></tr>\n" +
                  "<tr><td bgcolor=\"" + COLOR_INFO
                  + "\">\n" +
                  "<img src=\"" + file + "\"></td></tr>\n" +
                  "</table>\n");
    }

    private void writeStatisticsTableData(PrintStream out,
                                          PositionStatistics statistics,
                                          DecimalFormat format,
                                          boolean withMaxError)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(261);boolean empty = (statistics.getCount() == 0);
        boolean greaterOne = (statistics.getCount() > 1);
        out.print("<td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(262);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(264) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(263);out.print(format.format(statistics.getMean()));}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(265);out.print("</td><td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(266);if ((greaterOne) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(268) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(267);out.print(format.format(statistics.getDeviation()));}
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(305);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(307) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(306);out.print("");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(269);out.print("</td><td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(270);if ((greaterOne) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(272) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(271);out.print(format.format(statistics.getError()));}
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(302);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(304) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(303);out.print("");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(273);out.print("</td><td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(274);if ((greaterOne && withMaxError) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(276) && false))
        {
            $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(275);int movesPerGame = m_table.getNumberRows() / m_gameData.size();
            out.print(format.format(statistics.getMaxError(movesPerGame)));
        }
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(299);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(301) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(300);out.print("");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(277);out.print("</td><td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(278);if ((greaterOne) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(280) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(279);out.print(format.format(statistics.getMin()));}
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(296);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(298) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(297);out.print("");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(281);out.print("</td><td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(282);if ((greaterOne) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(284) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(283);out.print(format.format(statistics.getMax()));}
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(293);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(295) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(294);out.print("");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(285);out.print("</td><td>");
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(286);if ((greaterOne) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(288) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(287);out.print(format.format(statistics.getSum()));}
        else {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(290);if ((! empty) ? true : (!$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(292) && false))
            {$qualityscroll_cover_jacov_probe_77f3aeeb12252f48(291);out.print("");}}
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(289);out.print("</td><td>");
        out.print(statistics.getCount());
        out.print("</td><td>");
        out.print(statistics.m_numberNoResult);
        out.print("</td>");
    }

    private void writeStatisticsTableHeader(PrintStream out)
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(308);out.print("<th>Mean</th>"
                  + "<th>Deviation</th>"
                  + "<th>Error</th>"
                  + "<th>MaxError</th>"
                  + "<th>Min</th>"
                  + "<th>Max</th>"
                  + "<th>Sum</th>"
                  + "<th>Count</th>"
                  + "<th>Unknown</th>");
    }

    private void writeTableProperty(PrintStream out, String key)
        throws Exception
    {
        $qualityscroll_cover_jacov_probe_77f3aeeb12252f48(309);writeHtmlRow(out, key, m_table.getProperty(key, "?"));
    }
}
