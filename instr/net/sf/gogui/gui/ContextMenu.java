/* $$43564A43$$ WARNING: Do not edit. $$ This file has been instrumented by qualityscroll_cover_jacov 4.0.4-SNAPSHOT (Instrument Date:20240229123821) $$ */// ContextMenu.java

package net.sf.gogui.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.MessageFormat;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import net.sf.gogui.game.MarkType;
import net.sf.gogui.go.GoPoint;
import static net.sf.gogui.gui.I18n.i18n;

/** Context menu for fields on board. */
public class ContextMenu
    extends JPopupMenu
{
    public static transient boolean[] $qualityscroll_cover_coverage_buffer = $qualityscroll_cover_coverage_buffer_init();public static boolean[] $qualityscroll_cover_coverage_buffer_init() {try{if($qualityscroll_cover_coverage_buffer != null){return $qualityscroll_cover_coverage_buffer;}java.lang.Class<?> thisClass = ContextMenu.class.getClassLoader().loadClass("com.qualityscroll.cover.runtime.ProbeStore");java.lang.reflect.Method getProbesMethod = thisClass.getMethod("getProbes", long.class, long.class, long.class, java.lang.String.class, int.class);$qualityscroll_cover_coverage_buffer = (boolean[]) getProbesMethod.invoke(null,/* key(tuId + timestamp) */ 1291504784777263627L,/* translation unit id   */ 8963052502182161173L,/* timestamp             */ 1709177901915L,/* source file name      */ "ContextMenu.java",/* probe size            */ 27);}catch(java.lang.Exception e){throw new java.lang.RuntimeException(e);}return $qualityscroll_cover_coverage_buffer;}private static boolean $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(int index) {$qualityscroll_cover_coverage_buffer[index] = true;return true;}/** Callback for events generated by ContextMenu. */
    public interface Listener
    {
        void actionEditLabel(GoPoint point);

        void actionMark(GoPoint point, MarkType type, boolean mark);
    }

    public ContextMenu(GoPoint point, boolean mark, boolean markCircle,
                       boolean markSquare, boolean markTriangle,
                       Listener listener)
    {$qualityscroll_cover_coverage_buffer_init();
        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(0);m_point = point;
        m_listener = listener;
        m_actionListener = new ActionListener()
            {
                @Override
				public void actionPerformed(ActionEvent event)
                {
                    $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(1);Listener listener = ContextMenu.this.m_listener;
                    $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(2);if ((listener == null) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(4) && false))
                        {$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(3);return;}
                    $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(5);String actionCommand = event.getActionCommand();
                    $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(6);if ((actionCommand.equals("cancel")) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(8) && false))
                    {
                        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(7);ContextMenu.this.setVisible(false);
                    }
                    else {$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(9);if ((actionCommand.equals("mark")) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(11) && false))
                    {
                        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(10);boolean mark
                            = ContextMenu.this.m_mark.isSelected();
                        listener.actionMark(m_point, MarkType.MARK, mark);
                    }
                    else {$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(12);if ((actionCommand.equals("mark-circle")) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(14) && false))
                    {
                        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(13);boolean mark
                            = ContextMenu.this.m_markCircle.isSelected();
                        listener.actionMark(m_point, MarkType.CIRCLE, mark);
                    }
                    else {$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(15);if ((actionCommand.equals("mark-square")) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(17) && false))
                    {
                        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(16);boolean mark
                            = ContextMenu.this.m_markSquare.isSelected();
                        listener.actionMark(m_point, MarkType.SQUARE, mark);
                    }
                    else {$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(18);if ((actionCommand.equals("mark-triangle")) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(20) && false))
                    {
                        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(19);boolean mark
                            = ContextMenu.this.m_markTriangle.isSelected();
                        listener.actionMark(m_point, MarkType.TRIANGLE, mark);
                    }
                    else {$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(21);if ((actionCommand.equals("edit-label")) ? true : (!$qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(23) && false))
                    {
                        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(22);listener.actionEditLabel(m_point);
                    }}}}}}
                }
            };
        setLabel(MessageFormat.format(i18n("LB_CONTEXTMENU_POINT"), point));
        m_mark = createCheckBox("MN_CONTEXTMENU_MARK", "mark");
        m_mark.setSelected(mark);
        add(m_mark);
        m_markCircle = createCheckBox("MN_CONTEXTMENU_MARK_CIRCLE",
                                      "mark-circle");
        m_markCircle.setSelected(markCircle);
        add(m_markCircle);
        m_markSquare = createCheckBox("MN_CONTEXTMENU_MARK_SQUARE",
                                      "mark-square");
        m_markSquare.setSelected(markSquare);
        add(m_markSquare);
        m_markTriangle = createCheckBox("MN_CONTEXTMENU_MARK_TRIANGLE",
                                        "mark-triangle");
        m_markTriangle.setSelected(markTriangle);
        add(m_markTriangle);
        add(createItem("MN_CONTEXTMENU_EDIT_LABEL", "edit-label"));
        addSeparator();
        add(createItem("LB_CANCEL", "cancel"));
    }

    public GoPoint getPointArg()
    {
        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(24);return m_point;
    }

    private final ActionListener m_actionListener;

    private final GoPoint m_point;

    private final JCheckBoxMenuItem m_mark;

    private final JCheckBoxMenuItem m_markCircle;

    private final JCheckBoxMenuItem m_markSquare;

    private final JCheckBoxMenuItem m_markTriangle;

    private final Listener m_listener;

    private JCheckBoxMenuItem createCheckBox(String label,
                                             String actionCommand)
    {
        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(25);JCheckBoxMenuItem item = new JCheckBoxMenuItem(i18n(label));
        item.addActionListener(m_actionListener);
        item.setActionCommand(actionCommand);
        return item;
    }

    private JMenuItem createItem(String label, String actionCommand)
    {
        $qualityscroll_cover_jacov_probe_7c6328c32fbe6b15(26);JMenuItem item = new JMenuItem(i18n(label));
        item.addActionListener(m_actionListener);
        item.setActionCommand(actionCommand);
        return item;
    }
}
