/* $$43564A43$$ WARNING: Do not edit. $$ This file has been instrumented by qualityscroll_cover_jacov 4.0.4-SNAPSHOT (Instrument Date:20240229123822) $$ */// RecentMenu.java

package net.sf.gogui.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.prefs.Preferences;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import net.sf.gogui.util.ObjectUtil;
import net.sf.gogui.util.Platform;
import net.sf.gogui.util.PrefUtil;

/** Menu for recent item.
    Handles removing duplicates and storing the items between sessions. */
public final class RecentMenu
{
    public static transient boolean[] $qualityscroll_cover_coverage_buffer = $qualityscroll_cover_coverage_buffer_init();public static boolean[] $qualityscroll_cover_coverage_buffer_init() {try{if($qualityscroll_cover_coverage_buffer != null){return $qualityscroll_cover_coverage_buffer;}java.lang.Class<?> thisClass = RecentMenu.class.getClassLoader().loadClass("com.qualityscroll.cover.runtime.ProbeStore");java.lang.reflect.Method getProbesMethod = thisClass.getMethod("getProbes", long.class, long.class, long.class, java.lang.String.class, int.class);$qualityscroll_cover_coverage_buffer = (boolean[]) getProbesMethod.invoke(null,/* key(tuId + timestamp) */ 4096282345851999015L,/* translation unit id   */ 3555792039764876627L,/* timestamp             */ 1709177902708L,/* source file name      */ "RecentMenu.java",/* probe size            */ 77);}catch(java.lang.Exception e){throw new java.lang.RuntimeException(e);}return $qualityscroll_cover_coverage_buffer;}private static boolean $qualityscroll_cover_jacov_probe_3158b6055158dd53(int index) {$qualityscroll_cover_coverage_buffer[index] = true;return true;}/** Listener for events generated by RecentMenu. */
    public interface Listener
    {
        void itemSelected(String label, String value);
    }

    /** The maximum number of items.
        If set to a value larger than 10, only the first 10 items will have
        a mnemonic key. */
    public static final int MAX_ITEMS = 10;

    /** Constructor.
        @param text The label of the menu. Supports marking the mnemonics in
        the label with a preceeding '&amp;' (like in Qt).
        @param path The absolute path name of the node in
        java.util.prefs.Preferences that is used to store the menu items.
        @param listener The callback to be called if a menu item is
        selected. */
    public RecentMenu(String text, String path, Listener listener)
    {$qualityscroll_cover_coverage_buffer_init();
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(0);assert listener != null;
        m_path = path;
        m_listener = listener;
        m_menu = new GuiMenu(text);
        m_actionListener = new ActionListener()
            {
                @Override
				public void actionPerformed(ActionEvent event)
                {
                    $qualityscroll_cover_jacov_probe_3158b6055158dd53(1);RecentMenuItem item = (RecentMenuItem)event.getSource();
                    String label = item.getRecentMenuLabel();
                    String value = item.getRecentMenuValue();
                    m_listener.itemSelected(label, value);
                }
            };
        get();
        updateEnabled();
    }

    /** Add a new item at the top.
        If the new number of items is greater than MAX_ITEM, the oldest item
        is removed. */
    public void add(String label, String value)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(2);addNewItem(label, value);
        put();
    }

    public int getCount()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(3);return m_menu.getMenuComponentCount();
    }

    /** Don't modify the items in this menu! */
    public GuiMenu getMenu()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(4);return m_menu;
    }

    public String getValue(int i)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(5);return getItem(i).getRecentMenuValue();
    }

    public void remove(int i)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(6);m_menu.remove(getItem(i));
        relabel();
    }

    public void setLabel(int i, String label)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(7);getItem(i).setRecentMenuLabel(label);
        getItem(i).setPosition(i);
        put();
    }

    /** Set menu enabled if not empty, disabled otherwise. */
    public void updateEnabled()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(8);int count = getCount();
        m_menu.setEnabled(count > 0);
    }

    private final String m_path;

    private final ActionListener m_actionListener;

    private final Listener m_listener;

    private final GuiMenu m_menu;

    private void addNewItem(String label, String value)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(9);for (int i = 0; (i < getCount()) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(11) && false); ++i)
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(10);if ((getValue(i).equals(value)) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(18) && false))
                {$qualityscroll_cover_jacov_probe_3158b6055158dd53(17);m_menu.remove(i);}}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(12);JMenuItem item = new RecentMenuItem(label, value, m_actionListener);
        m_menu.add(item, 0);
        // There might be several oldest items to remove, if the list in the
        // preferences was created with a version of GoGui compiled with a
        // different value for MAX_ITEM.
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(13);while ((getCount() > MAX_ITEMS) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(15) && false))
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(14);m_menu.remove(getCount() - 1);}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(16);relabel();
    }

    private void get()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(19);Preferences prefs = PrefUtil.getNode(m_path);
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(20);if ((prefs == null) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(22) && false))
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(21);return;}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(23);int size = prefs.getInt("size", 0);
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(24);if ((size < 0) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(26) && false))
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(25);size = 0;}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(27);m_menu.removeAll();
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(28);for (int i = 0; (i < size) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(30) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(29);prefs = PrefUtil.getNode(m_path + "/" + i);
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(31);if ((prefs == null) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(33) && false))
                {$qualityscroll_cover_jacov_probe_3158b6055158dd53(32);break;}
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(34);String label = prefs.get("label", null);
            String value = prefs.get("value", null);
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(35);if ((label == null || value == null) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(37) && false))
                {$qualityscroll_cover_jacov_probe_3158b6055158dd53(36);continue;}
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(38);addNewItem(label, value);
        }
    }

    private RecentMenuItem getItem(int i)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(39);return (RecentMenuItem)m_menu.getItem(i);
    }

    private String getLabel(int i)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(40);return getItem(i).getRecentMenuLabel();
    }

    private void put()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(41);Preferences prefs = PrefUtil.createNode(m_path);
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(42);if ((prefs == null) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(44) && false))
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(43);return;}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(45);int size = getCount();
        prefs.putInt("size", size);
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(46);for (int i = 0; (i < size) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(48) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(47);prefs = PrefUtil.createNode(m_path + "/" + (size - i - 1));
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(49);if ((prefs == null) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(51) && false))
                {$qualityscroll_cover_jacov_probe_3158b6055158dd53(50);break;}
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(52);prefs.put("label", getLabel(i));
            prefs.put("value", getValue(i));
        }
    }

    /** Compute all new labels (including the number and mnemonic key) after
        changes were made. */
    private void relabel()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(53);int size = getCount();
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(54);for (int i = 0; (i < size) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(56) && false); ++i)
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(55);getItem(i).setPosition(i);}
    }
}

class RecentMenuItem
    extends JMenuItem
{
    public static transient boolean[] $qualityscroll_cover_coverage_buffer = $qualityscroll_cover_coverage_buffer_init();public static boolean[] $qualityscroll_cover_coverage_buffer_init() {try{if($qualityscroll_cover_coverage_buffer != null){return $qualityscroll_cover_coverage_buffer;}java.lang.Class<?> thisClass = RecentMenuItem.class.getClassLoader().loadClass("com.qualityscroll.cover.runtime.ProbeStore");java.lang.reflect.Method getProbesMethod = thisClass.getMethod("getProbes", long.class, long.class, long.class, java.lang.String.class, int.class);$qualityscroll_cover_coverage_buffer = (boolean[]) getProbesMethod.invoke(null,/* key(tuId + timestamp) */ 4096282345851999015L,/* translation unit id   */ 3555792039764876627L,/* timestamp             */ 1709177902708L,/* source file name      */ "RecentMenu.java",/* probe size            */ 77);}catch(java.lang.Exception e){throw new java.lang.RuntimeException(e);}return $qualityscroll_cover_coverage_buffer;}private static boolean $qualityscroll_cover_jacov_probe_3158b6055158dd53(int index) {$qualityscroll_cover_coverage_buffer[index] = true;return true;}public RecentMenuItem(String label, String value, ActionListener listener)
    {$qualityscroll_cover_coverage_buffer_init();
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(57);setRecentMenuLabel(label);
        m_value = value;
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(58);if ((! ObjectUtil.equals(label, value)) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(60) && false))
            {$qualityscroll_cover_jacov_probe_3158b6055158dd53(59);setToolTipText(value);}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(61);addActionListener(listener);
    }

    public String getRecentMenuLabel()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(62);return m_label;
    }

    public String getRecentMenuValue()
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(63);return m_value;
    }

    public void setPosition(int i)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(64);String text;
        String mnemonic;
        // Use 1-9 and 0 as mnemonics for the first 10 items
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(65);if ((! Platform.isMac() && i < 9) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(67) && false))
        {
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(66);text = Integer.toString(i + 1) + ": " + m_label;
            mnemonic = Integer.toString(i + 1);
        }
        else {$qualityscroll_cover_jacov_probe_3158b6055158dd53(72);if ((! Platform.isMac() && i == 9) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(74) && false))
        {
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(73);text = "10: " + m_label;
            mnemonic = "0";
        }
        else
        {
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(75);text = m_label;
            mnemonic = "";
        }}
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(68);setText(text);
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(69);if ((! mnemonic.equals("")) ? true : (!$qualityscroll_cover_jacov_probe_3158b6055158dd53(71) && false))
        {
            $qualityscroll_cover_jacov_probe_3158b6055158dd53(70);KeyStroke keyStroke = KeyStroke.getKeyStroke(mnemonic);
            int code = keyStroke.getKeyCode();
            setMnemonic(code);
        }
   }

    public void setRecentMenuLabel(String label)
    {
        $qualityscroll_cover_jacov_probe_3158b6055158dd53(76);m_label = label;
    }

    private String m_label;

    private final String m_value;
}
