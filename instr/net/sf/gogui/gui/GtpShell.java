/* $$43564A43$$ WARNING: Do not edit. $$ This file has been instrumented by qualityscroll_cover_jacov 4.0.4-SNAPSHOT (Instrument Date:20240229123822) $$ */// GtpShell.java

package net.sf.gogui.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.Box;
import javax.swing.ComboBoxEditor;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JViewport;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingUtilities;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import net.sf.gogui.gtp.GtpUtil;
import static net.sf.gogui.gui.I18n.i18n;
import net.sf.gogui.util.ObjectUtil;
import net.sf.gogui.util.Platform;
import net.sf.gogui.util.PrefUtil;

/** Dialog for displaying the GTP stream and for entering commands. */
public class GtpShell
    extends JDialog
    implements ActionListener
{
    public static transient boolean[] $qualityscroll_cover_coverage_buffer = $qualityscroll_cover_coverage_buffer_init();public static boolean[] $qualityscroll_cover_coverage_buffer_init() {try{if($qualityscroll_cover_coverage_buffer != null){return $qualityscroll_cover_coverage_buffer;}java.lang.Class<?> thisClass = GtpShell.class.getClassLoader().loadClass("com.qualityscroll.cover.runtime.ProbeStore");java.lang.reflect.Method getProbesMethod = thisClass.getMethod("getProbes", long.class, long.class, long.class, java.lang.String.class, int.class);$qualityscroll_cover_coverage_buffer = (boolean[]) getProbesMethod.invoke(null,/* key(tuId + timestamp) */ 1223071267285030806L,/* translation unit id   */ -1085159420749408694L,/* timestamp             */ 1709177902240L,/* source file name      */ "GtpShell.java",/* probe size            */ 215);}catch(java.lang.Exception e){throw new java.lang.RuntimeException(e);}return $qualityscroll_cover_coverage_buffer;}private static boolean $qualityscroll_cover_jacov_probe_f0f0bd419990164a(int index) {$qualityscroll_cover_coverage_buffer[index] = true;return true;}/** Callback for events generated by GtpShell. */
    public interface Listener
    {
        void actionSendCommand(String command, boolean isCritical,
                               boolean showError);

        /** Callback if some text is selected. */
        void textSelected(String text);
    }

    public GtpShell(Frame owner, Listener listener,
                    MessageDialogs messageDialogs)
    {
        super(owner, i18n("TIT_SHELL"));$qualityscroll_cover_coverage_buffer_init();$qualityscroll_cover_jacov_probe_f0f0bd419990164a(0);
        m_messageDialogs = messageDialogs;
        m_listener = listener;
        Preferences prefs = Preferences.userNodeForPackage(getClass());
        m_historyMin = prefs.getInt("history-min", 2000);
        m_historyMax = prefs.getInt("history-max", 3000);
        JPanel panel = new JPanel(new BorderLayout());
        getContentPane().add(panel, BorderLayout.CENTER);
        m_gtpShellText = new GtpShellText(m_historyMin, m_historyMax, false);
        CaretListener caretListener = new CaretListener()
            {
                @Override
				public void caretUpdate(CaretEvent event)
                {
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(1);if ((m_listener == null) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(3) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(2);return;}
                    // Call the callback only if the selected text has changed.
                    // This avoids that the callback is called multiple times
                    // if the caret position changes, but the text selection
                    // was null before and after the change (see also bug
                    // #2964755)
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(4);String selectedText = m_gtpShellText.getSelectedText();
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(5);if ((! ObjectUtil.equals(selectedText, m_selectedText)) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(7) && false))
                    {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(6);m_listener.textSelected(selectedText);
                        m_selectedText = selectedText;
                    }
                }
            };
        m_gtpShellText.addCaretListener(caretListener);
        m_scrollPane =
            new JScrollPane(m_gtpShellText,
                            ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,
                            ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(8);if ((Platform.isMac()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(10) && false))
            // Default Apple L&F uses no border, but Quaqua 3.7.4 does
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(9);m_scrollPane.setBorder(null);}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(11);panel.add(m_scrollPane, BorderLayout.CENTER);
        panel.add(createCommandInput(), BorderLayout.SOUTH);
        setMinimumSize(new Dimension(160, 112));
        pack();
    }

    @Override
	public void actionPerformed(ActionEvent event)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(12);String command = event.getActionCommand();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(13);if ((command.equals("run")) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(15) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(14);commandEntered();}
        else {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(16);if ((command.equals("close")) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(18) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(17);setVisible(false);}}
    }

    /** @see net.sf.gogui.gui.GtpShellText#isLastTextNonGTP */
    public boolean isLastTextNonGTP()
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(19);return m_gtpShellText.isLastTextNonGTP();
    }

    public void receivedInvalidResponse(final String response,
                                        boolean invokeLater)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(20);if ((SwingUtilities.isEventDispatchThread()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(22) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(21);appendInvalidResponse(response);}
        else
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(23);Runnable r = new Runnable() {
                    @Override
					public void run() {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(24);appendInvalidResponse(response);
                    } };
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(25);if ((invokeLater) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(27) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(26);SwingUtilities.invokeLater(r);}
            else
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(28);GuiUtil.invokeAndWait(r);}
        }
    }

    public void receivedResponse(final boolean error, final String response,
                                 boolean invokeLater)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(29);if ((SwingUtilities.isEventDispatchThread()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(31) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(30);appendResponse(error, response);}
        else
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(32);Runnable r = new Runnable() {
                    @Override
					public void run() {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(33);appendResponse(error, response);
                    } };
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(34);if ((invokeLater) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(36) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(35);SwingUtilities.invokeLater(r);}
            else
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(37);GuiUtil.invokeAndWait(r);}
        }
    }

    public void receivedStdErr(final String s, boolean invokeLater,
                               final boolean isLiveGfx,
                               final boolean isWarning)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(38);if ((SwingUtilities.isEventDispatchThread()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(40) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(39);appendLog(s, isLiveGfx, isWarning);}
        else
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(41);Runnable r = new Runnable() {
                    @Override
					public void run() {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(42);appendLog(s, isLiveGfx, isWarning);
                    } };
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(43);if ((invokeLater) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(45) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(44);SwingUtilities.invokeLater(r);}
            else
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(46);GuiUtil.invokeAndWait(r);}
        }
    }

    public void saveLog(JFrame parent)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(47);save(parent, m_gtpShellText.getLog(),
             m_gtpShellText.getLinesTruncated());
    }

    public void saveCommands(JFrame parent)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(48);save(parent, m_commands.toString(), m_linesTruncated);
    }

    public void saveHistory()
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(49);int maxHistory = 100;
        int max = m_history.size();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(50);if ((max > maxHistory) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(52) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(51);max = maxHistory;}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(53);ArrayList<String> list = new ArrayList<String>(max);
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(54);for (int i = m_history.size() - max; (i < m_history.size()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(56) && false); ++i)
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(55);list.add(m_history.get(i));}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(57);PrefUtil.putList("net/sf/gogui/gui/gtpshell/recentcommands", list);
    }

    public void setCommandInProgess(boolean commandInProgess)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(58);m_commandInProgress = commandInProgess;
    }

    public void setCommandCompletion(boolean commandCompletion)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(59);m_disableCompletions = ! commandCompletion;
    }

    public void setTimeStamp(boolean enable)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(60);m_gtpShellText.setTimeStamp(enable);
    }

    public void sentCommand(final String command)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(61);if ((SwingUtilities.isEventDispatchThread()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(63) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(62);appendSentCommand(command);}
        else
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(64);GuiUtil.invokeAndWait(new Runnable() {
                    @Override
					public void run() {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(65);appendSentCommand(command);
                    } });}
    }

    public void setInitialCompletions(ArrayList<String> completions)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(66);for (int i = completions.size() - 1; (i >= 0) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(68) && false); --i)
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(67);String command = completions.get(i);
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(74);if ((! GtpUtil.isStateChangingCommand(command)) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(76) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(75);appendToHistory(command);}
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(69);ArrayList<String> list =
            PrefUtil.getList("net/sf/gogui/gui/gtpshell/recentcommands");
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(70);for (int i = 0; (i < list.size()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(72) && false); ++i)
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(71);appendToHistory(list.get(i));}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(73);addAllCompletions(m_history);
    }

    public void setProgramCommand(String command)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(77);m_programCommand = command;
    }

    public void setProgramName(String name)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(78);m_programName = name;
    }

    public void setProgramVersion(String version)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(79);m_programVersion = version;
    }

    private boolean m_disableCompletions;

    private boolean m_commandInProgress;

    private final int m_historyMax;

    private final int m_historyMin;

    private int m_linesTruncated;

    private int m_numberCommands;

    private final Listener m_listener;

    private ComboBoxEditor m_editor;

    private JButton m_runButton;

    private JTextField m_textField;

    /** @note JComboBox is a generic type since Java 7. We use a raw type
        and suppress unchecked warnings where needed to be compatible with
        earlier Java versions. */
    private JComboBox m_comboBox;

    private final JScrollPane m_scrollPane;

    private final GtpShellText m_gtpShellText;

    private final StringBuilder m_commands = new StringBuilder(4096);

    private final ArrayList<String> m_history = new ArrayList<String>(128);

    private String m_selectedText;

    private String m_programCommand = "unknown";

    private String m_programName = "unknown";

    private String m_programVersion = "unknown";

    private final MessageDialogs m_messageDialogs;

    // See comment at m_comboBox
    @SuppressWarnings("unchecked")
    private void addAllCompletions(ArrayList<String> completions)
    {
        // On Windows JDK 1.4 changing the popup automatically
        // selects all text in the text field, so we remember and
        // restore the state.
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(80);String oldText = m_textField.getText();
        int oldCaretPosition = m_textField.getCaretPosition();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(81);if ((completions.size() > m_comboBox.getItemCount()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(83) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(82);m_comboBox.hidePopup();}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(84);m_comboBox.removeAllItems();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(85);for (int i = completions.size() - 1; (i >= 0) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(87) && false); --i)
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(86);m_comboBox.addItem(GuiUtil.createComboBoxItem(completions.get(i)));}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(88);m_comboBox.setSelectedIndex(-1);
        m_textField.setText(oldText);
        m_textField.setCaretPosition(oldCaretPosition);
    }

    private void appendInvalidResponse(String response)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(89);assert SwingUtilities.isEventDispatchThread();
        m_gtpShellText.appendInvalidResponse(response);
    }

    private void appendLog(String line, boolean isLiveGfx, boolean isWarning)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(90);assert SwingUtilities.isEventDispatchThread();
        m_gtpShellText.appendLog(line, isLiveGfx, isWarning);
    }

    private void appendResponse(boolean error, String response)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(91);assert SwingUtilities.isEventDispatchThread();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(92);if ((error) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(94) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(93);m_gtpShellText.appendError(response);}
        else
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(95);m_gtpShellText.appendInput(response);}
    }

    private void appendSentCommand(String command)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(96);assert SwingUtilities.isEventDispatchThread();
        m_commands.append(command);
        m_commands.append('\n');
        ++m_numberCommands;
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(97);if ((m_numberCommands > m_historyMax) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(99) && false))
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(98);int truncateLines = m_numberCommands - m_historyMin;
            String s = m_commands.toString();
            int index = GtpShellText.findTruncateIndex(s, truncateLines);
            assert index != -1;
            m_commands.delete(0, index);
            m_linesTruncated += truncateLines;
            m_numberCommands = 0;
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(100);m_gtpShellText.appendOutput(command + "\n");
    }

    private void appendToHistory(String command)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(101);command = command.trim();
        int i = m_history.indexOf(command);
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(102);if ((i >= 0) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(104) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(103);m_history.remove(i);}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(105);m_history.add(command);
    }

    private void commandEntered()
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(106);assert SwingUtilities.isEventDispatchThread();
        String command = m_textField.getText().trim();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(107);if ((command.trim().equals("")) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(109) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(108);return;}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(110);if ((command.startsWith("#")) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(112) && false))
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(111);m_gtpShellText.appendComment(command + "\n");
        }
        else
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(114);if ((GtpUtil.isStateChangingCommand(command)) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(116) && false))
            {
                $qualityscroll_cover_jacov_probe_f0f0bd419990164a(115);showError(i18n("MSG_SHELL_BOARDCHANGING"),
                          i18n("MSG_SHELL_BOARDCHANGING_2"), false);
                return;
            }
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(117);if ((m_commandInProgress) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(119) && false))
            {
                $qualityscroll_cover_jacov_probe_f0f0bd419990164a(118);showError(i18n("MSG_SHELL_CMD_IN_PROGRESS"),
                          i18n("MSG_SHELL_CMD_IN_PROGRESS_2"), false);
                return;
            }
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(120);m_listener.actionSendCommand(command, false, false);
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(113);appendToHistory(command);
        m_gtpShellText.setPositionToEnd();
        m_comboBox.hidePopup();
        addAllCompletions(m_history);
        m_editor.setItem(null);
    }

    private JComponent createCommandInput()
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(121);Box box = Box.createVerticalBox();
        //JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));
        JPanel panel = new JPanel(new BorderLayout());
        box.add(GuiUtil.createSmallFiller());
        box.add(Box.createVerticalGlue());
        box.add(panel);
        box.add(Box.createVerticalGlue());
        m_comboBox = new JComboBox();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(122);if ((Platform.isMac()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(124) && false))
            // Workaround for bug in Quaqua Look and Feel 3.6.11
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(123);m_comboBox.setMaximumRowCount(7);}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(125);m_editor = m_comboBox.getEditor();
        m_textField = (JTextField)m_editor.getEditorComponent();
        m_textField.setFocusTraversalKeysEnabled(false);
        KeyAdapter keyAdapter = new KeyAdapter()
            {
                @Override
				public void keyReleased(KeyEvent e)
                {
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(126);int c = e.getKeyCode();
                    int mod = e.getModifiers();
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(127);if ((c == KeyEvent.VK_ESCAPE) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(129) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(128);return;}
                    else {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(130);if ((c == KeyEvent.VK_TAB) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(132) && false))
                    {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(131);findBestCompletion();
                        popupCompletions();
                    }
                    else {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(133);if ((c == KeyEvent.VK_PAGE_UP
                             && mod == ActionEvent.SHIFT_MASK) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(135) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(134);scrollPage(true);}
                    else {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(136);if ((c == KeyEvent.VK_PAGE_DOWN
                             && mod == ActionEvent.SHIFT_MASK) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(138) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(137);scrollPage(false);}
                    else {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(139);if ((c == KeyEvent.VK_ENTER
                             && ! m_comboBox.isPopupVisible()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(141) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(140);commandEntered();}
                    else {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(142);if ((e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(144) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(143);popupCompletions();}}}}}}
                }
            };
        m_textField.addKeyListener(keyAdapter);
        m_comboBox.setEditable(true);
        m_comboBox.setFont(m_gtpShellText.getFont());
        m_comboBox.addActionListener(this);
        addWindowListener(new WindowAdapter() {
                @Override
				public void windowActivated(WindowEvent e) {
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(145);m_comboBox.requestFocusInWindow();
                    m_textField.requestFocusInWindow();
                }
            });
        panel.add(m_comboBox, BorderLayout.CENTER);
        m_runButton = new JButton();
        m_runButton.setIcon(GuiUtil.getIcon("gogui-key_enter", i18n("LB_RUN")));
        m_runButton.setActionCommand("run");
        m_runButton.setFocusable(false);
        m_runButton.setToolTipText(i18n("TT_SHELL_RUN"));
        m_runButton.addActionListener(this);
        GuiUtil.setMacBevelButton(m_runButton);
        JPanel buttonPanel =
            new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));
        panel.add(buttonPanel, BorderLayout.EAST);
        buttonPanel.add(GuiUtil.createSmallFiller());
        buttonPanel.add(m_runButton);
        // add some empty space so that status bar does not overlap the
        // window resize widget on Mac OS X
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(146);if ((Platform.isMac()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(148) && false))
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(147);Dimension dimension = new Dimension(20, 1);
            Box.Filler filler =
                new Box.Filler(dimension, dimension, dimension);
            buttonPanel.add(filler);
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(149);return box;
    }

    private void findBestCompletion()
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(150);String text = m_textField.getText().trim();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(151);if ((text.equals("")) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(153) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(152);return;}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(154);String bestCompletion = null;
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(155);for (int i = 0; (i < m_history.size()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(157) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(156);String completion = m_history.get(i);
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(161);if ((completion.startsWith(text)) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(163) && false))
            {
                $qualityscroll_cover_jacov_probe_f0f0bd419990164a(162);if ((bestCompletion == null) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(165) && false))
                {
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(164);bestCompletion = completion;
                    continue;
                }
                $qualityscroll_cover_jacov_probe_f0f0bd419990164a(166);int j = text.length();
                $qualityscroll_cover_jacov_probe_f0f0bd419990164a(167);while (true)
                {
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(168);if ((j >= bestCompletion.length()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(172) && false))
                    {
                        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(171);break;
                    }
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(173);if ((j >= completion.length()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(175) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(174);break;}
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(176);if ((bestCompletion.charAt(j) != completion.charAt(j)) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(178) && false))
                        {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(177);break;}
                    $qualityscroll_cover_jacov_probe_f0f0bd419990164a(179);++j;
                }
                $qualityscroll_cover_jacov_probe_f0f0bd419990164a(170);bestCompletion = completion.substring(0, j);
            }
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(158);if ((bestCompletion != null) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(160) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(159);m_textField.setText(bestCompletion);}
    }

    private void popupCompletions()
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(180);String text = m_textField.getText();
        text = text.replaceAll("^ *", "");
        ArrayList<String> completions = new ArrayList<String>(128);
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(181);for (int i = 0; (i < m_history.size()) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(183) && false); ++i)
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(182);String c = m_history.get(i);
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(193);if ((c.startsWith(text)) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(195) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(194);completions.add(c);}
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(184);addAllCompletions(completions);
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(185);if ((m_disableCompletions) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(187) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(186);return;}
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(188);int size = completions.size();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(189);if ((text.length() > 0
            && (size > 1 || (size == 1 && ! text.equals(completions.get(0))))) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(191) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(190);m_comboBox.showPopup();}
        else
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(192);m_comboBox.hidePopup();}
    }

    private void save(JFrame parent, String s, int linesTruncated)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(196);File file = FileDialogs.showSave(parent, null, m_messageDialogs);
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(197);if ((file == null) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(199) && false))
            {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(198);return;}
        try
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(200);PrintStream out = new PrintStream(file);
            out.println("# Name: " + m_programName);
            out.println("# Version: " + m_programVersion);
            out.println("# Command: " + m_programCommand);
            out.println("# Lines truncated: " + linesTruncated);
            out.print(s);
            out.close();
        }
        catch (FileNotFoundException e)
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(201);m_messageDialogs.showError(parent, i18n("MSG_SHELL_SAVE_FAILURE"),
                                       "");
        }
    }

    private void showError(String mainMessage, String optionalMessage,
                           boolean isCritical)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(202);m_messageDialogs.showError(this, mainMessage, optionalMessage,
                                   isCritical);
    }

    private void scrollPage(boolean up)
    {
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(203);JViewport viewport = m_scrollPane.getViewport();
        Point position = viewport.getViewPosition();
        int delta = m_scrollPane.getSize().height
            - m_gtpShellText.getFont().getSize();
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(204);if ((up) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(206) && false))
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(205);position.y -= delta;
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(207);if ((position.y < 0) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(209) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(208);position.y = 0;}
        }
        else
        {
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(211);position.y += delta;
            int max = viewport.getViewSize().height
                - m_scrollPane.getSize().height;
            $qualityscroll_cover_jacov_probe_f0f0bd419990164a(212);if ((position.y > max) ? true : (!$qualityscroll_cover_jacov_probe_f0f0bd419990164a(214) && false))
                {$qualityscroll_cover_jacov_probe_f0f0bd419990164a(213);position.y = max;}
        }
        $qualityscroll_cover_jacov_probe_f0f0bd419990164a(210);viewport.setViewPosition(position);
    }
}
